# Refreshes donors and events from NCBO Airtable
name: 1-GetAirtableData

# Controls when the workflow will run
on:
  workflow_dispatch:
  issues:
    types: [opened]

jobs:
  get_airtable_data:
    if: >
      (github.event.issue.user.login == 'steverhall' &&
      contains(github.event.issue.labels.*.name, 'data_update')) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: execute py script # run file
        run: |
          python -VV
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
      - name: Refresh events from Airtable
        run: AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }} AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }} python refresh_event_data.py
      - name: Refresh donors from Airtable
        run: AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }} AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }} python refresh_donors.py
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Steve Hall
          author_email: srhall@gmail.com
          message: 'Updated NCBO events'
          add: '*.yml'
      # only run next if triggered by issue
      - name: Close issue
        if : contains(github.event.issue.labels.*.name, 'data_update')
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
      - name: Trigger 2-Staging Deployment
        if: success()
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "trigger-deploy-staging"}'
